package Connect_read;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.Authenticator;
import java.net.HttpURLConnection;
import java.net.PasswordAuthentication;
import java.net.URL;
import java.util.Base64;
import java.util.Scanner;

public class Main {
	
	 public static void main(String[] args) {
	 /*
    Maven dependency for JSON-simple:
        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
            <version>1.1.1</version>
        </dependency>
     */

    try {
        //Public API:
        //https://www.metaweather.com/api/location/search/?query=<CITY>
        //https://www.metaweather.com/api/location/44418/

       // URL url = new URL("https://www.metaweather.com/api/location/search/?query=London");

        //http://SQL.adastsystems.cz:7048/AdastOData/OData/Company('Adast%20Systems%2C%20a.s.')/Prehled_zbozi
    	
    	String username="tpvgroup";
		String password="tpvgroup";
    	
        	URL url = new URL("http://SQL.adastsystems.cz:7048/AdastOData/OData/Company('Adast%20Systems%2C%20a.s.");
        	
     /*  	 Authenticator.setDefault (new Authenticator() {
 		    protected PasswordAuthentication getPasswordAuthentication() {
 		        return new PasswordAuthentication ("username", "password".toCharArray());
 		    }
 		});*/
        	
        
        	
        HttpURLConnection conn = (HttpURLConnection) url.openConnection();
        
		//URLConnection uc = url.openConnection();
        String userpass = username + ":" + password;
        String basicAuth = "Basic " + new String(Base64.getEncoder().encode(userpass.getBytes()));
        conn.setRequestProperty ("Authorization", basicAuth);
       // InputStream in = conn.getInputStream();
        
        conn.setRequestMethod("GET");
        conn.connect();

        //Check if connect is made
        int responseCode = conn.getResponseCode();

        // 200 OK
        if (responseCode != 200) {
            throw new RuntimeException("HttpResponseCode: " + responseCode);
        } else {

            StringBuilder informationString = new StringBuilder();
            Scanner scanner = new Scanner(url.openStream());

            while (scanner.hasNext()) {
                informationString.append(scanner.nextLine());
            }
            //Close the scanner
            scanner.close();

            System.out.println(informationString);


            //JSON simple library Setup with Maven is used to convert strings to JSON
            JSONParser parse = new JSONParser();
            JSONArray dataObject = (JSONArray) parse.parse(String.valueOf(informationString));

            //Get the first JSON object in the JSON array
            System.out.println(dataObject.get(0));

            JSONObject countryData = (JSONObject) dataObject.get(0);

            System.out.println(countryData.get("woeid"));

        }
    } catch (Exception e) {
        e.printStackTrace();
    }
    
    
    
}
	 

	 
	 
	 @SuppressWarnings("unused")
	private static void sendPOST(String POST_URL, String USER_AGENT, String POST_PARAMS) throws IOException {
			URL obj = new URL(POST_URL);
			HttpURLConnection con = (HttpURLConnection) obj.openConnection();
			con.setRequestMethod("POST");
			con.setRequestProperty("User-Agent", USER_AGENT);

			// For POST only - START
			con.setDoOutput(true);
			OutputStream os = con.getOutputStream();
			os.write(POST_PARAMS.getBytes());
			os.flush();
			os.close();
			// For POST only - END

			int responseCode = con.getResponseCode();
			System.out.println("POST Response Code :: " + responseCode);

			if (responseCode == HttpURLConnection.HTTP_OK) { //success
				BufferedReader in = new BufferedReader(new InputStreamReader(
						con.getInputStream()));
				String inputLine;
				StringBuffer response = new StringBuffer();

				while ((inputLine = in.readLine()) != null) {
					response.append(inputLine);
				}
				in.close();

				// print result
				System.out.println(response.toString());
			} else {
				System.out.println("POST request not worked");
			}
		}
	 
}

